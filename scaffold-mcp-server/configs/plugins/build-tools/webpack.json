{
  "metadata": {
    "name": "webpack",
    "version": "1.0.0",
    "description": "Webpack构建工具插件，提供现代化的模块打包和构建配置",
    "author": "Scaffold Generator",
    "homepage": "https://webpack.js.org/",
    "keywords": ["webpack", "bundler", "build", "module"],
    "category": "builder"
  },
  "activation": {
    "techStack": {
      "builder": ["webpack"]
    }
  },
  "dependencies": [
    {
      "name": "webpack",
      "version": "^5.89.0",
      "type": "devDependencies"
    },
    {
      "name": "webpack-cli",
      "version": "^5.1.4",
      "type": "devDependencies"
    },
    {
      "name": "webpack-dev-server",
      "version": "^4.15.1",
      "type": "devDependencies"
    },
    {
      "name": "html-webpack-plugin",
      "version": "^5.5.3",
      "type": "devDependencies"
    },
    {
      "name": "css-loader",
      "version": "^6.8.1",
      "type": "devDependencies"
    },
    {
      "name": "style-loader",
      "version": "^3.3.3",
      "type": "devDependencies"
    },
    {
      "name": "mini-css-extract-plugin",
      "version": "^2.7.6",
      "type": "devDependencies"
    },
    {
      "name": "ts-loader",
      "version": "^9.5.1",
      "type": "devDependencies",
      "condition": "context.techStack.language?.includes('typescript')"
    },
    {
      "name": "@babel/core",
      "version": "^7.23.3",
      "type": "devDependencies",
      "condition": "context.techStack.framework?.includes('react')"
    },
    {
      "name": "@babel/preset-env",
      "version": "^7.23.3",
      "type": "devDependencies",
      "condition": "context.techStack.framework?.includes('react')"
    },
    {
      "name": "@babel/preset-react",
      "version": "^7.23.3",
      "type": "devDependencies",
      "condition": "context.techStack.framework?.includes('react')"
    },
    {
      "name": "@babel/preset-typescript",
      "version": "^7.23.3",
      "type": "devDependencies",
      "condition": "context.techStack.framework?.includes('react') && context.techStack.language?.includes('typescript')"
    },
    {
      "name": "babel-loader",
      "version": "^9.1.3",
      "type": "devDependencies",
      "condition": "context.techStack.framework?.includes('react')"
    },
    {
      "name": "vue-loader",
      "version": "^17.3.1",
      "type": "devDependencies",
      "condition": "context.techStack.framework?.includes('vue')"
    },
    {
      "name": "@vue/compiler-sfc",
      "version": "^3.3.8",
      "type": "devDependencies",
      "condition": "context.techStack.framework?.includes('vue')"
    }
  ],
  "scripts": [
    {
      "name": "dev",
      "command": "webpack serve --mode development",
      "description": "启动开发服务器"
    },
    {
      "name": "build",
      "command": "webpack --mode production",
      "description": "构建生产版本"
    },
    {
      "name": "build:analyze",
      "command": "webpack --mode production --analyze",
      "description": "构建并分析包大小"
    }
  ],
  "files": [
    {
      "path": "webpack.config.js",
      "content": "const path = require('path');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n{{#if (includes techStack.framework 'vue')}}\nconst { VueLoaderPlugin } = require('vue-loader');\n{{/if}}\n\nconst isDevelopment = process.env.NODE_ENV !== 'production';\n\nmodule.exports = {\n  entry: './src/{{#if (includes techStack.framework 'vue')}}main.ts{{else}}index.{{#if (includes techStack.language 'typescript')}}ts{{else}}js{{/if}}{{/if}}',\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: isDevelopment ? '[name].js' : '[name].[contenthash].js',\n    clean: true\n  },\n  mode: isDevelopment ? 'development' : 'production',\n  devtool: isDevelopment ? 'eval-source-map' : 'source-map',\n  devServer: {\n    port: 3000,\n    hot: true,\n    open: true,\n    historyApiFallback: true\n  },\n  resolve: {\n    extensions: ['.js', '.ts'{{#if (includes techStack.framework 'vue')}}, '.vue'{{/if}}{{#if (includes techStack.framework 'react')}}, '.jsx', '.tsx'{{/if}}],\n    alias: {\n      '@': path.resolve(__dirname, 'src')\n    }\n  },\n  module: {\n    rules: [\n{{#if (includes techStack.framework 'vue')}}\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader'\n      },\n{{/if}}\n{{#if (includes techStack.language 'typescript')}}\n      {\n        test: /\\.tsx?$/,\n        use: [\n{{#if (includes techStack.framework 'react')}}\n          {\n            loader: 'babel-loader',\n            options: {\n              presets: [\n                '@babel/preset-env',\n                '@babel/preset-react',\n                '@babel/preset-typescript'\n              ]\n            }\n          }\n{{else}}\n          'ts-loader'\n{{/if}}\n        ],\n        exclude: /node_modules/\n      },\n{{/if}}\n{{#if (includes techStack.framework 'react')}}\n      {\n        test: /\\.(js|jsx)$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: [\n              '@babel/preset-env',\n              '@babel/preset-react'\n            ]\n          }\n        },\n        exclude: /node_modules/\n      },\n{{/if}}\n      {\n        test: /\\.css$/,\n        use: [\n          isDevelopment ? 'style-loader' : MiniCssExtractPlugin.loader,\n          'css-loader'\n        ]\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg)$/i,\n        type: 'asset/resource'\n      }\n    ]\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: './{{#if (includes techStack.framework 'vue')}}index.html{{else}}public/index.html{{/if}}',\n      title: '{{projectName}}'\n    }),\n{{#if (includes techStack.framework 'vue')}}\n    new VueLoaderPlugin(),\n{{/if}}\n    ...(isDevelopment ? [] : [\n      new MiniCssExtractPlugin({\n        filename: '[name].[contenthash].css'\n      })\n    ])\n  ],\n  optimization: {\n    splitChunks: {\n      chunks: 'all',\n      cacheGroups: {\n        vendor: {\n          test: /[\\\\/]node_modules[\\\\/]/,\n          name: 'vendors',\n          chunks: 'all'\n        }\n      }\n    }\n  }\n};\n",
      "encoding": "utf8",
      "condition": "!context.hasFile('webpack.config.js')"
    },
    {
      "path": ".babelrc",
      "content": "{\n  \"presets\": [\n    \"@babel/preset-env\"{{#if (includes techStack.framework 'react')}},\n    \"@babel/preset-react\"{{#if (includes techStack.language 'typescript')}},\n    \"@babel/preset-typescript\"{{/if}}{{/if}}\n  ]\n}\n",
      "encoding": "utf8",
      "condition": "context.techStack.framework?.includes('react') && !context.hasFile('.babelrc')"
    }
  ],
  "integration": {
    "typescript": {
      "compilerOptions": {
        "moduleResolution": "node",
        "allowSyntheticDefaultImports": true,
        "esModuleInterop": true
      }
    },
    "eslint": {
      "extends": ["plugin:import/webpack"]
    }
  },
  "defaultConfig": {
    "webpack": {
      "devServer": {
        "port": 3000
      },
      "optimization": {
        "minimize": true
      }
    }
  }
}