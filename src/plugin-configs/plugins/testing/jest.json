{
  "metadata": {
    "name": "jest",
    "version": "1.0.0",
    "category": "testing",
    "description": "Jest testing framework configuration",
    "author": "Scaffold MCP Server",
    "homepage": "https://jestjs.io/",
    "keywords": ["testing", "jest", "unit-test", "javascript", "typescript"]
  },
  "activation": {
    "techStack": {
      "framework": ["vue", "vue3", "react"],
      "language": ["javascript", "typescript"]
    }
  },
  "dependencies": [
    {
      "name": "jest",
      "version": "^29.7.0",
      "type": "devDependencies"
    },
    {
      "name": "@types/jest",
      "version": "^29.5.8",
      "type": "devDependencies",
      "condition": {
        "language": ["typescript"]
      }
    },
    {
      "name": "ts-jest",
      "version": "^29.1.1",
      "type": "devDependencies",
      "condition": {
        "language": ["typescript"]
      }
    },
    {
      "name": "@vue/test-utils",
      "version": "^2.4.2",
      "type": "devDependencies",
      "condition": {
        "framework": ["vue", "vue3"]
      }
    },
    {
      "name": "@testing-library/react",
      "version": "^13.4.0",
      "type": "devDependencies",
      "condition": {
        "framework": ["react"]
      }
    },
    {
      "name": "@testing-library/jest-dom",
      "version": "^6.1.4",
      "type": "devDependencies",
      "condition": {
        "framework": ["react"]
      }
    }
  ],
  "scripts": {
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage"
  },
  "files": [
    {
      "path": "jest.config.js",
      "content": "module.exports = {\n  testEnvironment: 'jsdom',\n  setupFilesAfterEnv: ['<rootDir>/src/setupTests.js'],\n  moduleNameMapping: {\n    '^@/(.*)$': '<rootDir>/src/$1'\n  },\n  collectCoverageFrom: [\n    'src/**/*.{js,jsx,ts,tsx}',\n    '!src/**/*.d.ts',\n    '!src/main.{js,ts}',\n    '!src/index.{js,ts}'\n  ],\n  coverageThreshold: {\n    global: {\n      branches: 80,\n      functions: 80,\n      lines: 80,\n      statements: 80\n    }\n  }\n};"
    },
    {
      "path": "src/setupTests.js",
      "content": "// Jest setup file\nimport '@testing-library/jest-dom';\n\n// Mock console methods to reduce noise in tests\nglobal.console = {\n  ...console,\n  warn: jest.fn(),\n  error: jest.fn()\n};\n\n// Mock window.matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(),\n    removeListener: jest.fn(),\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn()\n  }))\n});\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = class IntersectionObserver {\n  constructor() {}\n  observe() {\n    return null;\n  }\n  disconnect() {\n    return null;\n  }\n  unobserve() {\n    return null;\n  }\n};",
      "condition": {
        "framework": ["react"]
      }
    },
    {
      "path": "src/setupTests.ts",
      "content": "// Jest setup file\nimport '@testing-library/jest-dom';\n\n// Mock console methods to reduce noise in tests\nglobal.console = {\n  ...console,\n  warn: jest.fn(),\n  error: jest.fn()\n};\n\n// Mock window.matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(),\n    removeListener: jest.fn(),\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn()\n  }))\n});\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = class IntersectionObserver {\n  constructor() {}\n  observe() {\n    return null;\n  }\n  disconnect() {\n    return null;\n  }\n  unobserve() {\n    return null;\n  }\n};",
      "condition": {
        "framework": ["react"],
        "language": ["typescript"]
      }
    }
  ],
  "defaultConfig": {
    "testMatch": [
      "**/__tests__/**/*.(js|jsx|ts|tsx)",
      "**/*.(test|spec).(js|jsx|ts|tsx)"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/dist/",
      "/build/"
    ]
  }
}