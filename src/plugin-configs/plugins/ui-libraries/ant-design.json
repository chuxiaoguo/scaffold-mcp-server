{
  "metadata": {
    "name": "ant-design",
    "version": "1.0.0",
    "description": "Ant Design React UI组件库插件，企业级产品设计语言",
    "author": "Scaffold Generator",
    "homepage": "https://ant.design/",
    "keywords": ["antd", "ant-design", "react", "ui", "components"],
    "category": "ui"
  },
  "activation": {
    "techStack": {
      "framework": ["react"],
      "ui": ["antd", "ant-design"]
    }
  },
  "dependencies": [
    {
      "name": "antd",
      "version": "^5.12.8",
      "type": "dependencies"
    },
    {
      "name": "@ant-design/icons",
      "version": "^5.2.6",
      "type": "dependencies"
    },
    {
      "name": "@ant-design/colors",
      "version": "^7.0.2",
      "type": "dependencies",
      "condition": "context.extraTools?.includes('theme-customization')"
    },
    {
      "name": "dayjs",
      "version": "^1.11.10",
      "type": "dependencies"
    },
    {
      "name": "babel-plugin-import",
      "version": "^1.13.8",
      "type": "devDependencies",
      "condition": "context.extraTools?.includes('tree-shaking') && context.techStack.buildTool?.includes('webpack')"
    }
  ],
  "scripts": [],
  "files": [
    {
      "path": "src/components/AntdProvider.tsx",
      "content": "import React from 'react';\nimport { ConfigProvider, theme } from 'antd';\nimport zhCN from 'antd/locale/zh_CN';\n{{#if (includes extraTools 'theme-customization')}}\nimport { generate, presetPalettes } from '@ant-design/colors';\n{{/if}}\n\ninterface AntdProviderProps {\n  children: React.ReactNode;\n}\n\nconst AntdProvider: React.FC<AntdProviderProps> = ({ children }) => {\n{{#if (includes extraTools 'theme-customization')}}\n  const customTheme = {\n    token: {\n      colorPrimary: '#1890ff',\n      borderRadius: 6,\n    },\n    algorithm: theme.defaultAlgorithm,\n  };\n{{/if}}\n\n  return (\n    <ConfigProvider\n      locale={zhCN}\n{{#if (includes extraTools 'theme-customization')}}\n      theme={customTheme}\n{{/if}}\n    >\n      {children}\n    </ConfigProvider>\n  );\n};\n\nexport default AntdProvider;\n",
      "encoding": "utf8",
      "condition": "context.techStack.language?.includes('typescript') && !context.hasFile('src/components/AntdProvider.tsx')"
    },
    {
      "path": "src/components/AntdProvider.jsx",
      "content": "import React from 'react';\nimport { ConfigProvider, theme } from 'antd';\nimport zhCN from 'antd/locale/zh_CN';\n{{#if (includes extraTools 'theme-customization')}}\nimport { generate, presetPalettes } from '@ant-design/colors';\n{{/if}}\n\nconst AntdProvider = ({ children }) => {\n{{#if (includes extraTools 'theme-customization')}}\n  const customTheme = {\n    token: {\n      colorPrimary: '#1890ff',\n      borderRadius: 6,\n    },\n    algorithm: theme.defaultAlgorithm,\n  };\n{{/if}}\n\n  return (\n    <ConfigProvider\n      locale={zhCN}\n{{#if (includes extraTools 'theme-customization')}}\n      theme={customTheme}\n{{/if}}\n    >\n      {children}\n    </ConfigProvider>\n  );\n};\n\nexport default AntdProvider;\n",
      "encoding": "utf8",
      "condition": "!context.techStack.language?.includes('typescript') && !context.hasFile('src/components/AntdProvider.jsx')"
    },
    {
      "path": "src/components/HelloWorld.tsx",
      "content": "import React, { useState } from 'react';\nimport { Card, Button, Space, message } from 'antd';\n{{#if (includes extraTools 'icons')}}\nimport { SettingOutlined, PlusOutlined } from '@ant-design/icons';\n{{/if}}\n\ninterface HelloWorldProps {\n  projectName?: string;\n}\n\nconst HelloWorld: React.FC<HelloWorldProps> = ({ projectName = '{{projectName}}' }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handleClick = async () => {\n    setLoading(true);\n    try {\n      // 模拟异步操作\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      message.success('欢迎使用 Ant Design！');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <Card\n        title={\n          <Space>\n            <span>欢迎使用 {projectName}</span>\n{{#if (includes extraTools 'icons')}}\n            <SettingOutlined />\n{{/if}}\n          </Space>\n        }\n        style={{ maxWidth: 600, margin: '0 auto' }}\n      >\n        <div style={{ textAlign: 'center' }}>\n          <p style={{ marginBottom: '20px', color: '#666' }}>\n            这是一个基于 React 和 Ant Design 构建的应用。\n          </p>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            onClick={handleClick}\n{{#if (includes extraTools 'icons')}}\n            icon={<PlusOutlined />}\n{{/if}}\n          >\n            开始使用\n          </Button>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default HelloWorld;\n",
      "encoding": "utf8",
      "condition": "context.techStack.language?.includes('typescript') && !context.hasFile('src/components/HelloWorld.tsx')"
    },
    {
      "path": "src/components/HelloWorld.jsx",
      "content": "import React, { useState } from 'react';\nimport { Card, Button, Space, message } from 'antd';\n{{#if (includes extraTools 'icons')}}\nimport { SettingOutlined, PlusOutlined } from '@ant-design/icons';\n{{/if}}\n\nconst HelloWorld = ({ projectName = '{{projectName}}' }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handleClick = async () => {\n    setLoading(true);\n    try {\n      // 模拟异步操作\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      message.success('欢迎使用 Ant Design！');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <Card\n        title={\n          <Space>\n            <span>欢迎使用 {projectName}</span>\n{{#if (includes extraTools 'icons')}}\n            <SettingOutlined />\n{{/if}}\n          </Space>\n        }\n        style={{ maxWidth: 600, margin: '0 auto' }}\n      >\n        <div style={{ textAlign: 'center' }}>\n          <p style={{ marginBottom: '20px', color: '#666' }}>\n            这是一个基于 React 和 Ant Design 构建的应用。\n          </p>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            onClick={handleClick}\n{{#if (includes extraTools 'icons')}}\n            icon={<PlusOutlined />}\n{{/if}}\n          >\n            开始使用\n          </Button>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default HelloWorld;\n",
      "encoding": "utf8",
      "condition": "!context.techStack.language?.includes('typescript') && !context.hasFile('src/components/HelloWorld.jsx')"
    }
  ],
  "integration": {
    "vite": {
      "plugins": [
        {
          "name": "legacy",
          "config": "legacy({ targets: ['defaults', 'not IE 11'] })",
          "import": "import legacy from '@vitejs/plugin-legacy';",
          "condition": "context.extraTools?.includes('legacy-support')"
        }
      ]
    },
    "webpack": {
      "plugins": [
        {
          "name": "BabelPluginImport",
          "config": "{ test: /\\.(js|jsx|ts|tsx)$/, use: { loader: 'babel-loader', options: { plugins: [['import', { libraryName: 'antd', libraryDirectory: 'es', style: 'css' }]] } } }",
          "condition": "context.extraTools?.includes('tree-shaking')"
        }
      ]
    },
    "typescript": {
      "compilerOptions": {
        "types": ["antd"]
      }
    }
  },
  "defaultConfig": {
    "antd": {
      "locale": "zh_CN",
      "theme": {
        "primaryColor": "#1890ff"
      }
    }
  },
  "hooks": {
    "afterActivation": "console.log('Ant Design plugin activated successfully')"
  }
}